cmake_minimum_required(VERSION 3.1)

add_compile_options(/MDd /Od /DEBUG:FULL)

set(CMAKE_BUILD_TYPE "Debug")

project(WebChimera.js)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(MSVC)
    foreach(flag_var
            CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE
            CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO)
        if(${flag_var} MATCHES "/MD")
           string(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
        endif()
    endforeach()

    message(AAAAAAAAAAAAA"${flag_var}")

elseif(APPLE)
    set(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} "${CMAKE_CURRENT_SOURCE_DIR}/deps/VLC.app/Contents/MacOS/lib")
endif()

file(GLOB SOURCE_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR}
    src/[^.]*.cpp
    src/[^.]*.h
    README.md
    package.json
    )

include_directories(${CMAKE_JS_INC} deps)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/deps/libvlc_wrapper)

add_library(${PROJECT_NAME} SHARED ${SOURCE_FILES} ${CMAKE_JS_SRC})
set_target_properties(${PROJECT_NAME} PROPERTIES PREFIX "" SUFFIX ".node")

find_library( LIBMY_LIB NAMES libmy_lib.dll
HINTS "${CMAKE_CURRENT_SOURCE_DIR}/"
REQUIRED
)

target_link_libraries(${PROJECT_NAME} ${CMAKE_JS_LIB} libvlc_wrapper ${LIBMY_LIB})
target_compile_definitions(${PROJECT_NAME}
    PUBLIC
    V8_31BIT_SMIS_ON_64BIT_ARCH
    V8_REVERSE_JSARGS
    )

#get_cmake_property(_variableNames VARIABLES)
#foreach(_variableName ${_variableNames})
#    message(STATUS "${_variableName}=${${_variableName}}")
#endforeach()
